# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "14"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install

      - name: Run eslint
        run: yarn run lint

      - name: Force version in package.json to match Git tag
        if: ${{ github.ref_type == 'tag' }}
        run: |
          sed -i -e "s/\(version\": \"\)[0-9\.]*/\1${{github.ref_name}}/" package.json

      - name: Append build metadata to package.json version field
        run: |
          sed -i -e "s/\(version\": \"[0-9\.]*\)-dev/\1+`echo ${{github.sha}} | cut -c1-7`/" package.json

      - name: Build webapp
        run: yarn run build
        env:
          COMMIT_REF: ${{ github.sha }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}

      - name: Run tests
        run: yarn run test

      - name: Build CLI app
        run: yarn run cli:build

      - name: Publish CLI app
        uses: actions/upload-artifact@v3
        with:
          name: 'timing71.js'
          path: 'cli/timing71.js'

      - name: Publish to Netlify
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build --prod

      - name: Create Sentry release
        if: github.ref == 'refs/heads/master'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
